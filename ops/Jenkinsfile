pipeline {
  agent any

  environment {
    DOCKERHUB_USER = credentials('DOCKERHUB_USER')
    DOCKERHUB_PASS = credentials('DOCKERHUB_PASS')
    REPO = "hao1706/ballandbeer"
  }

  stages {
    stage('Clone source') {
      steps {
        checkout scm
      }
    }

    stage('Detect changed services') {
      steps {
        script {
          changedServices = sh(script: '''
            git diff --name-only HEAD~1 HEAD |
            grep -E '^services/|^frontend/' |
            cut -d/ -f2 |
            sort -u
          ''', returnStdout: true).trim().split('\n')

          if (changedServices.size() == 1 && changedServices[0].trim() == '') {
            echo "No changed service detected. Assuming first build. Building all services."
            changedServices = ['frontend', 'authen', 'booking', 'order', 'product', 'profile']
          }

          echo "Changed services: ${changedServices}"
        }
      }
    }

    stage('Build & Push') {
      steps {
        script {
          for (svc in changedServices) {
            def path = (svc == 'frontend') ? 'frontend' : "services/${svc}"
            def image = "${REPO}:${svc}"

            echo "Building ${svc} from ${path}..."

            if (svc == 'frontend') {
              sh "cp ${path}/.env.local ${path}/.env.local.build || echo 'No .env.local file found for frontend'"
            }

            sh "docker build -t ${image} ${path}"

            if (svc == 'frontend') {
              sh "rm -f ${path}/.env.local.build"
            }

            echo "Pushing ${image} to Docker Hub..."
            sh '''
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            '''
            sh "docker push ${image}"
          }
        }
      }
    }
  }
}