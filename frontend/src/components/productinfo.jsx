"use client";
import { useState, useEffect } from "react";
import { useParams, useRouter } from "next/navigation"; // Import useRouter

export default function ProductInfo() {
  const { id } = useParams(); // L·∫•y ID t·ª´ URL
  const router = useRouter(); // Kh·ªüi t·∫°o router
  const [product, setProduct] = useState(null);
  const [loading, setLoading] = useState(true);
  const [reviews, setReviews] = useState(0); // State ƒë·ªÉ l∆∞u s·ªë l∆∞·ª£t ƒë√°nh gi√°
  // Map of product _id to image paths
  const imageMap = {
    "67ff9ff35e234d7307549c8f": "/images/products/giay4.jpeg",
    "67ff9ff35e234d7307549c90": "/images/products/giay2.jpeg",
    "67ff9ff35e234d7307549c91": "/images/products/giay1.jpeg",
    "67ff9ff35e234d7307549c92": "/images/products/giay5.webp",
    "67ff9ff35e234d7307549c93": "/images/products/giay6.jpeg",
    "67ff9ff35e234d7307549c94": "/images/products/binhnuoc.jpg",
    "67ff9ff35e234d7307549c95": "/images/products/bocongdong.webp",
    "67ff9ff35e234d7307549c96": "/images/products/bongda.webp",
    "67ff9ff35e234d7307549c97": "/images/products/gangtay.jpg",
    "67ff9ff35e234d7307549c98": "/images/products/tat.webp",
    "67ff9ff35e234d7307549c99": "/images/products/aoj97.jpg",
    "67ff9ff35e234d7307549c9a": "/images/products/ao5.jpeg",
    "67ff9ff35e234d7307549c9b": "/images/products/ao1.webp",
    "67ff9ff35e234d7307549c9c": "/images/products/ao4.jpg",
    "67ff9ff35e234d7307549c9d": "/images/products/ao2.webp",
    "67ff9ff35e234d7307549c9e": "/images/products/sting.jpg",
    "67ff9ff35e234d7307549c9f": "/images/products/nuoc4.jpg",
    "67ff9ff35e234d7307549ca0": "/images/products/nuoc1.jpeg",
    "67ff9ff35e234d7307549ca1": "/images/products/nuoc2.jpg",
    "67ff9ff35e234d7307549ca2": "/images/products/doan2.webp",
    "67ff9ff35e234d7307549ca3": "/images/products/doan1.jpg",
  };

  useEffect(() => {
    if (!id) return; // ƒê·ª£i ƒë·∫øn khi ID c√≥ gi√° tr·ªã

    const fetchProduct = async () => {
      try {
        const response = await fetch(
          `http://localhost:6001/api/products/${id}`
        );
        const data = await response.json();
        setProduct({
          ...data,
          image: imageMap[data._id] || "/images/default.jpg",
        });
        setLoading(false);

        // T·∫°o s·ªë l∆∞·ª£t ƒë√°nh gi√° ng·∫´u nhi√™n t·ª´ 100 ƒë·∫øn 500
        const randomReviews = Math.floor(Math.random() * (500 - 100 + 1)) + 100;
        setReviews(randomReviews);
      } catch (error) {
        console.error("Error fetching product:", error);
        setLoading(false);
      }
    };

    fetchProduct();
  }, [id]);

  if (loading) {
    return <p>Loading product details...</p>;
  }

  if (!product) {
    return <p>Product not found.</p>;
  }
  const handleBuyNow = () => {
    const quantity = document.getElementById("quantityInput").value; // L·∫•y s·ªë l∆∞·ª£ng t·ª´ input
    const totalPrice = product.price * quantity; // T√≠nh t·ªïng ti·ªÅn
    // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang checkout v·ªõi th√¥ng tin s·∫£n ph·∫©m
    router.push(
      `/checkout?name=${product.name}&price=${product.price}&image=${product.image}&quantity=${quantity}&totalPrice=${totalPrice}`
    );
  };
  const handleAddToCart = () => {
    const quantity = document.getElementById("quantityInput").value; // L·∫•y s·ªë l∆∞·ª£ng t·ª´ input
    const cartItem = {
      id: product._id,
      name: product.name,
      price: product.price,
      quantity: parseInt(quantity, 10),
      image: product.image,
    };

    // L·∫•y gi·ªè h√†ng hi·ªán t·∫°i t·ª´ localStorage
    const cart = JSON.parse(localStorage.getItem("cart")) || [];

    // Ki·ªÉm tra n·∫øu s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i trong gi·ªè h√†ng
    const existingItemIndex = cart.findIndex((item) => item.id === cartItem.id);
    if (existingItemIndex !== -1) {
      cart[existingItemIndex].quantity += cartItem.quantity; // C·ªông d·ªìn s·ªë l∆∞·ª£ng
    } else {
      cart.push(cartItem); // Th√™m s·∫£n ph·∫©m m·ªõi
    }

    // L∆∞u l·∫°i gi·ªè h√†ng v√†o localStorage
    localStorage.setItem("cart", JSON.stringify(cart));

    // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang shoppingcart
    router.push("/shoppingcart");
  };
  return (
    <div className="bg-green-50 text-black p-6 mb-[32vh]">
      <div className="max-w-5xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-20">
        {/* Product Image Section */}
        <div className="flex flex-col items-center">
          <img
            src={product.image || "/images/default.jpg"} // Hi·ªÉn th·ªã ·∫£nh s·∫£n ph·∫©m
            alt={product.name}
            className="w-full max-w-md object-cover"
          />
        </div>

        {/* Product Details Section */}
        <div>
          <h1 className="text-2xl font-bold">{product.name}</h1>
          <div className="flex items-center mt-2">
            <span className="text-yellow-400 text-lg">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
            <span className="ml-2 text-sm">({reviews} L∆∞·ª£t ƒë√°nh gi√°.)</span>
          </div>
          <p className="text-3xl font-semibold mt-4">{product.price} VND</p>

          {/* Buttons */}
          <div className="flex space-x-4 mt-6">
            <button
              id="cartBtn"
              onClick={handleAddToCart}
              className="rounded-lg px-5 py-2.5 border-2 border-green-600 text-black font-medium hover:bg-green-500 hover:text-white hover:scale-105 transition-transform"
            >
              üõí Th√™m v√†o gi·ªè h√†ng
            </button>
            <button
              id="buyBtn"
              onClick={handleBuyNow}
              className="rounded-lg bg-green-200 px-5 py-2.5 text-base font-medium text-black hover:bg-green-500 hover:text-white hover:scale-105 transition-transform"
            >
              Mua ngay
            </button>
          </div>

          {/* Quantity Selector */}
          <div className="flex items-center mt-4">
            <span className="mr-2">Quantity</span>
            <input
              type="number"
              id="quantityInput" // Th√™m ID ƒë·ªÉ l·∫•y gi√° tr·ªã
              min="1"
              defaultValue="1"
              className="w-16 p-2 border border-gray-700 bg-gray-100 rounded text-black"
            />
          </div>

          {/* Description Section */}
          <div className="mt-6">
            <h3 className="font-semibold">Description</h3>
            <p className="text-sm text-gray-400 mt-2">
              ƒê√¢y l√† m√¥ t·∫£ s·∫£n ph·∫©m. M√¥ t·∫£ cung c·∫•p th√¥ng tin chi ti·∫øt v·ªÅ s·∫£n
              ph·∫©m, bao g·ªìm ch·∫•t li·ªáu, k√≠ch th∆∞·ªõc, v√† c√°c t√≠nh nƒÉng n·ªïi b·∫≠t. M√¥
              t·∫£ n√†y gi√∫p kh√°ch h√†ng hi·ªÉu r√µ h∆°n v·ªÅ s·∫£n ph·∫©m tr∆∞·ªõc khi quy·∫øt
              ƒë·ªãnh mua h√†ng.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
